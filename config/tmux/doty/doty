#!/usr/bin/env bash

set -x

CURRENT_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"

# [tmux] load scripts in ~/.tmux on creating a new pane
# load order: __before__.sh, ${session_name}.sh, __after__.sh
function doty_tmux_load_startup_scripts() {
    tmux set-environment -g DOTY_TMUX_PREFIX "${DOTY_TMUX_PREFIX:-"C-a"}"

    tmux set-environment -g DOTY_TMUX_DIRECTORY "${CURRENT_DIR}"
    tmux set-environment -g DOTY_TMUX_CONF "${CURRENT_DIR}/tmux.conf"
    tmux set-environment -g DOTY_TMUX_KEYMAP_CONF "${CURRENT_DIR}/keymap.conf"
    tmux set-environment -g DOTY_TMUX_THEME_CONF "${CURRENT_DIR}/theme.conf"
    tmux set-environment -g DOTY_TMUX_THEME "${CURRENT_DIR}/theme"
    
    tmux_conf=" \
        ${CURRENT_DIR}/tmux.conf \
        ${CURRENT_DIR}/keymap.conf \
        ${CURRENT_DIR}/theme.conf \
    "
    for conf in "$HOME/.tmux.conf" "$XDG_CONFIG_HOME/tmux/tmux.conf" "$HOME/.config/tmux/tmux.conf"; do
        if [ -f "$conf" ]; then
            tmux_conf="$tmux_conf $conf"

            tmux set-environment -g TMUX_CONF_LOCAL "$conf"
            break
        fi
    done
    tmux set-option -g '@tmux-conf' "$tmux_conf"

    command -v random_emoji > /dev/null && tmux set-environment -g KUBE_TMUX_SYMBOL_EMOJI "$(random_emoji)"
    command -v emotty > /dev/null && tmux set-environment -g KUBE_TMUX_SYMBOL_EMOJI "$(emotty)"

    tmux set-environment -g TMUX_PLUGIN_MANAGER_PATH "${DOTY_DIRECTORY}/config/tmux/plugins/"

    tmux set-environment -g TMUX_TERM "${DOTY_TMUX_TERM}"


    local env_before_script="${DOTY_DEVELOPMENT_DIRECTORY}/tmux/__before__.sh"
    [[ -f "${env_before_script}" ]] && { . "${env_before_script}"; }
    local env_main_script="${DOTY_DEVELOPMENT_DIRECTORY}/tmux/$(tmux display-message -p '#{session_name}').sh"
    [[ -f "${env_main_script}" ]] && { . "${env_main_script}"; }
    local env_after_script="${DOTY_DEVELOPMENT_DIRECTORY}/tmux/__after__.sh"
    [[ -f "${env_after_script}" ]] && { . "${env_after_script}"; }

    tmux source "${CURRENT_DIR}/tmux.conf"
    tmux source "${CURRENT_DIR}/keymap.conf"
    tmux source "${CURRENT_DIR}/kube.conf"
    tmux source "${CURRENT_DIR}/theme.conf"

    tmux run -b "cat \${DOTY_TMUX_THEME} | sh -s _apply_configuration"

    # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
    tmux set-option -g '@tpm-path' "${DOTY_DIRECTORY}/config/tmux/tpm"
    tmux run -b "${DOTY_DIRECTORY}/config/tmux/tpm/tpm"
}

main() {
    doty_tmux_load_startup_scripts >/dev/null 2>&1
   
    # tmux set-hook -gap after-kill-pane "display-message 'kill-pane unset'"
    # tmux set-hook -ga after-kill-window "display-message 'kill-window unset'"

    tmux set-hook -ga pane-focus-in "run-shell -b 'bash ${CURRENT_DIR}/kube restore pane-focus-in'"
    # tmux set-hook -ga pane-focus-out "run-shell -b 'bash ${CURRENT_DIR}/kube backup pane-focus-out'"
    #tmux set-hook -ga pane-died "display-message 'unset pane-died'"
    #tmux set-hook -ga pane-exited "display-message 'unset pane-exited'"

    # tmux set-hook -ga after-new-session "run-shell -b 'bash ${CURRENT_DIR}/kube initialize after-new-session'"
    # tmux set-hook -ga after-new-window "run-shell -b 'bash ${CURRENT_DIR}/kube initialize after-new-window'"
    #tmux set-hook -gap after-select-pane "run-shell -b 'bash ${CURRENT_DIR}/kube restore'"

    # tmux set-hook -ga after-attach-session "display-message 'after-attach-session'"
    # tmux set-hook -ga after-last-pane "display-message 'after-last-pane'"
    # tmux set-hook -ga after-next-layout "display-message 'after-next-layout'"
    # tmux set-hook -ga after-select-window "display-message 'after-select-window'"
    # tmux set-hook -ga after-switch-client "display-message 'after-switch-client'"
    # tmux set-hook -ga after-display-panes "display-message 'after-display-panes'"
    # tmux set-hook -ga after-last-window "display-message 'after-last-window'"
    # tmux set-hook -ga after-load-buffer "display-message 'after-load-buffer'"
    # tmux set-hook -ga after-next-window "display-message 'after-next-window'"
    # tmux set-hook -ga window-unlinked "display-message 'window-unlinked'"
    # tmux set-hook -ga after-break-pane "display-message 'after-break-pane'"
    # tmux set-hook -ga after-display-popup "display-message 'after-display-popup'"
    # tmux set-hook -ga after-link-window "display-message 'after-link-window'"
    # tmux set-hook -ga after-lock-client "display-message 'after-lock-client'"
    # tmux set-hook -ga after-paste-buffer "display-message 'after-paste-buffer'"
    # tmux set-hook -ga after-respawn-pane "display-message 'after-respawn-pane'"
    # tmux set-hook -ga after-show-window-options "display-message 'after-show-window-options'"
    # tmux set-hook -ga after-unlink-window "display-message 'after-unlink-window'"
    # tmux set-hook -ga after-capture-pane "display-message 'after-capture-pane'"
    # tmux set-hook -ga after-lock-server "display-message 'after-lock-server'"
    # tmux set-hook -ga after-pipe-pane "display-message 'after-pipe-pane'"
    # tmux set-hook -ga after-respawn-window "display-message 'after-respawn-window'"
    # tmux set-hook -ga after-set-buffer "display-message 'after-set-buffer'"
    # tmux set-hook -ga after-source-file "display-message 'after-source-file'"
    # tmux set-hook -ga after-wait-for "display-message 'after-wait-for'"
    # tmux set-hook -ga after-clear-history "display-message 'after-clear-history'"
    # tmux set-hook -ga after-has-session "display-message 'after-has-session'"
    # tmux set-hook -ga after-lock-session "display-message 'after-lock-session'"
    # tmux set-hook -ga after-previous-layout "display-message 'after-previous-layout'"
    # tmux set-hook -ga after-rotate-window "display-message 'after-rotate-window'"
    # tmux set-hook -ga after-split-window "display-message 'after-split-window'"
    # tmux set-hook -ga alert-activity "display-message 'alert-activity'"
    # tmux set-hook -ga pane-set-clipboard "display-message 'pane-set-clipboard'"
    # tmux set-hook -ga after-confirm-before "display-message 'after-confirm-before'"
    # tmux set-hook -ga after-move-pane "display-message 'after-move-pane'"
    # tmux set-hook -ga after-previous-window "display-message 'after-previous-window'"
    # tmux set-hook -ga alert-bell "display-message 'alert-bell'"
    # tmux set-hook -ga session-closed "display-message 'session-closed'"
    # tmux set-hook -ga after-delete-buffer "display-message 'after-delete-buffer'"
    # tmux set-hook -ga after-join-pane "display-message 'after-join-pane'"
    # tmux set-hook -ga after-move-window "display-message 'after-move-window'"
    # tmux set-hook -ga after-refresh-client "display-message 'after-refresh-client'"
    # tmux set-hook -ga after-save-buffer "display-message 'after-save-buffer'"
    # tmux set-hook -ga after-set-window-option "display-message 'after-set-window-option'"
    # tmux set-hook -ga after-suspend-client "display-message 'after-suspend-client'"
    # tmux set-hook -ga session-created "display-message 'session-created'"
    # tmux set-hook -ga after-detach-client "display-message 'after-detach-client'"
    # tmux set-hook -ga after-kill-pane "display-message 'after-kill-pane'"
    # tmux set-hook -ga after-new-session "display-message 'after-new-session'"
    # tmux set-hook -ga after-rename-session "display-message 'after-rename-session'"
    # tmux set-hook -ga after-select-layout "display-message 'after-select-layout'"
    # tmux set-hook -ga after-show-buffer "display-message 'after-show-buffer'"
    # tmux set-hook -ga after-swap-pane "display-message 'after-swap-pane'"
    # tmux set-hook -ga client-attached "display-message 'client-attached'"
    # tmux set-hook -ga session-renamed "display-message 'session-renamed'"
    # tmux set-hook -ga after-display-menu "display-message 'after-display-menu'"
    # tmux set-hook -ga after-kill-window "display-message 'after-kill-window'"
    # tmux set-hook -ga after-list-sessions "display-message 'after-list-sessions'"
    # tmux set-hook -ga after-new-window "display-message 'after-new-window'"
    # tmux set-hook -ga after-rename-window "display-message 'after-rename-window'"
    # tmux set-hook -ga after-select-pane "display-message 'after-select-pane'"
    # tmux set-hook -ga after-swap-window "display-message 'after-swap-window'"
    # tmux set-hook -ga client-detached "display-message 'client-detached'"
    # tmux set-hook -ga window-linked "display-message 'window-linked'"
}

main
