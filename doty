#!/usr/bin/env zsh

# If DOTY_DIRECTORY is not defined, use the current script's directory.
[[ -z "${DOTY_DIRECTORY}" ]] && export DOTY_DIRECTORY="${${(%):-%x}:a:h}"

[[ -z "${DOTFILES_LOCAL_DIRECTORY}" ]] && export DOTFILES_LOCAL_DIRECTORY="${DOTY_DIRECTORY}.local"
[[ -z "${DOTY_DEVELOPMENT_DIRECTORY}" ]] && export DOTY_DEVELOPMENT_DIRECTORY="${HOME}/.local/share"
[[ -z "${DOTY_DEVELOPMENT_CONFIG_DIRECTORY}" ]] && export DOTY_DEVELOPMENT_CONFIG_DIRECTORY="${HOME}/.local/config"
[[ -z "${DOTY_DEVELOPMENT_CACHE_DIRECTORY}" ]] && export DOTY_DEVELOPMENT_CACHE_DIRECTORY="${HOME}/.local/cache"
[[ -z "${DOTY_DEVELOPMENT_SDK_DIRECTORY}" ]] && export DOTY_DEVELOPMENT_SDK_DIRECTORY="${DOTY_DEVELOPMENT_DIRECTORY}/sdks"

[[ -d "${DOTY_DEVELOPMENT_DIRECTORY}" ]] || mkdir -p "${DOTY_DEVELOPMENT_DIRECTORY}"
[[ -d "${DOTY_DEVELOPMENT_CONFIG_DIRECTORY}" ]] || mkdir -p "${DOTY_DEVELOPMENT_CONFIG_DIRECTORY}"
[[ -d "${DOTY_DEVELOPMENT_CACHE_DIRECTORY}" ]] || mkdir -p "${DOTY_DEVELOPMENT_CACHE_DIRECTORY}"
[[ -d "${DOTY_DEVELOPMENT_SDK_DIRECTORY}" ]] || mkdir -p "${DOTY_DEVELOPMENT_SDK_DIRECTORY}"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Load the local shell dotfiles, and then some:
# * ~/.zsh_path can be used to extend `$PATH`.
# * ~/.zsh_extra can be used for other settings you donâ€™t want to commit.
for file in ${HOME}/.zsh_{path,prompt,exports,aliases,functions,extra}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Load the local shell dotfiles, and then some:
# [[ -f "${DOTFILES_LOCAL_DIRECTORY}/path" ]] && source "${DOTFILES_LOCAL_DIRECTORY}/path"
# [[ -f "${DOTFILES_LOCAL_DIRECTORY}/bash_prompt" ]] && source "${DOTFILES_LOCAL_DIRECTORY}/bash_prompt"
# [[ -f "${DOTFILES_LOCAL_DIRECTORY}/bash_exports" ]] && source "${DOTFILES_LOCAL_DIRECTORY}/bash_exports"
# [[ -f "${DOTFILES_LOCAL_DIRECTORY}/aliases" ]] && source "${DOTFILES_LOCAL_DIRECTORY}/aliases"
# [[ -f "${DOTFILES_LOCAL_DIRECTORY}/bash_functions" ]] && source "${DOTFILES_LOCAL_DIRECTORY}/bash_functions"
# [[ -f "${DOTFILES_LOCAL_DIRECTORY}/extra" ]] && source "${DOTFILES_LOCAL_DIRECTORY}/extra"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
if [[ -z $plugins ]]; then
    plugins=(
        aliases
        brew
        colored-man-pages
        colorize
        command-not-found
        copyfile
        copypath
        cve
        dotenv
        emoji
        emotty
        encode64
        extract
        fzf
        gcloud
        genpass
        git-extras
        # git-prompt
        gitignore
        gpg-agent
        history
        isodate
        iterm2
        jsontools
        k9s
        last-working-dir
        npm
        # pop
        pre-commit
        profiles
        # pylint
        ssh
        ssh-agent
        thefuck
        terraform
        # themes
        universalarchive
        urltools
        vscode
        yarn
        z
        zbell
        # zsh-interactive-cd
        # zsh-navigation-tools

        ### Local
        # android
        git
        github
        golang
        helm
        kubectl
        kubectx
        limactl
        macos
        # minikube
        mise
        nmap
        nodejs
        pfctl
        podman
        python
        rust
        tmux

        doty
        zsh-autosuggestions
        zsh-syntax-highlighting
    )
fi

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell" # set by `omz`
ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="%F $(tput setaf 136)...$(tput sgr0)%f"

# Path to your oh-my-zsh installation.
export ZSH="${DOTY_DIRECTORY}/libraries/oh-my-zsh"
export ZSH_CACHE_DIR="${DOTY_DEVELOPMENT_CACHE_DIRECTORY}/oh-my-zsh"
# Would you like to use another custom folder than $ZSH/custom?
export ZSH_CUSTOM="${DOTY_DIRECTORY}"

export ZSHZ_DATA="${DOTY_DEVELOPMENT_CACHE_DIRECTORY}/z/.z"

export ZSH_DOTENV_FILE=".envrc"

# Colorize style that use pygments
export ZSH_COLORIZE_STYLE="${ZSH_COLORIZE_STYLE:-"colorful"}"

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#777777,bg=#0f3000"
export ZSH_AUTOSUGGEST_STRATEGY="match_prev_cmd"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="yyyy-mm-dd"

source "${ZSH}/oh-my-zsh.sh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f "${HOME}/.p10k.zsh" ]] && source "${HOME}/.p10k.zsh"
[[ -f "${HOME}/.zsh_p10k" ]] && source "${HOME}/.zsh_p10k"
